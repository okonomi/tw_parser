# Generated from lib/tw_parser/value_parser.rb with RBS::Inline

module TwParser
  class ValueParser
    class ValueWordNode < Data
      attr_reader value(): String

      def self.new: (String value) -> instance
                  | (value: String) -> instance

      def self.members: () -> [ :value ]

      def members: () -> [ :value ]
    end

    class ValueFunctionNode < Data
      attr_reader value(): String

      attr_reader nodes(): Array[value_ast_node]

      def self.new: (String value, Array[value_ast_node] nodes) -> instance
                  | (value: String, nodes: Array[value_ast_node]) -> instance

      def self.members: () -> [ :value, :nodes ]

      def members: () -> [ :value, :nodes ]
    end

    class ValueSeparatorNode < Data
      attr_reader value(): String

      def self.new: (String value) -> instance
                  | (value: String) -> instance

      def self.members: () -> [ :value ]

      def members: () -> [ :value ]
    end

    type value_ast_node = ValueWordNode | ValueFunctionNode | ValueSeparatorNode

    type value_parent_node = ValueFunctionNode | nil

    # : (String input) -> Array[value_ast_node]
    def self.parse: (String input) -> Array[value_ast_node]

    # : (String input, Integer start, Integer finish) -> String
    def self.substring: (String input, Integer start, Integer finish) -> String

    # : (Array[value_ast_node]) -> Array[Hash[Symbol, untyped]]
    def self.extract: (Array[value_ast_node]) -> Array[Hash[Symbol, untyped]]

    # : (Array[value_ast_node]) -> String
    def self.to_css: (Array[value_ast_node]) -> String
  end
end
