# Generated from lib/tw_parser/candidate/variant.rb with RBS::Inline

module TwParser
  module Candidate
    class ArbitraryVariant < Data
      attr_reader selector(): String

      attr_reader relative(): bool

      def self.new: (String selector, bool relative) -> instance
                  | (selector: String, relative: bool) -> instance

      def self.members: () -> [ :selector, :relative ]

      def members: () -> [ :selector, :relative ]
    end

    class StaticVariant < Data
      attr_reader root(): String

      def self.new: (String root) -> instance
                  | (root: String) -> instance

      def self.members: () -> [ :root ]

      def members: () -> [ :root ]
    end

    class FunctionalVariant < Data
      attr_reader root(): String

      attr_reader value(): ArbitraryVariantValue | NamedVariantValue | nil

      attr_reader modifier(): ArbitraryModifier | NamedModifier | nil

      def self.new: (String root, ArbitraryVariantValue | NamedVariantValue | nil value, ArbitraryModifier | NamedModifier | nil modifier) -> instance
                  | (root: String, value: ArbitraryVariantValue | NamedVariantValue | nil, modifier: ArbitraryModifier | NamedModifier | nil) -> instance

      def self.members: () -> [ :root, :value, :modifier ]

      def members: () -> [ :root, :value, :modifier ]
    end

    class ArbitraryVariantValue < Data
      attr_reader value(): String

      def self.new: (String value) -> instance
                  | (value: String) -> instance

      def self.members: () -> [ :value ]

      def members: () -> [ :value ]
    end

    class NamedVariantValue < Data
      attr_reader value(): String

      def self.new: (String value) -> instance
                  | (value: String) -> instance

      def self.members: () -> [ :value ]

      def members: () -> [ :value ]
    end
  end
end
